// <auto-generated />
using System;
using Aura.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aura.Api.Migrations
{
    [DbContext(typeof(AuraDbContext))]
    partial class AuraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Aura.Core.Data.ExportHistoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Codec")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("codec");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("completed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<double?>("DurationSeconds")
                        .HasColumnType("REAL")
                        .HasColumnName("duration_seconds");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("error_message");

                    b.Property<long?>("FileSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("file_size");

                    b.Property<string>("InputFile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("input_file");

                    b.Property<string>("OutputFile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("output_file");

                    b.Property<string>("Platform")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("platform");

                    b.Property<string>("PresetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("preset_name");

                    b.Property<double>("Progress")
                        .HasColumnType("REAL")
                        .HasColumnName("progress");

                    b.Property<string>("Resolution")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("resolution");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("started_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Status");

                    b.HasIndex("Status", "CreatedAt");

                    b.ToTable("export_history");
                });
#pragma warning restore 612, 618
        }
    }
}
