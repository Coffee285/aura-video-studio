name: CI - Windows

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: Aura.sln

jobs:
  build-and-package-windows:
    name: Build and Package (Windows)
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build Core Projects
      run: |
        dotnet build Aura.Core/Aura.Core.csproj --configuration Release --no-restore
        dotnet build Aura.Providers/Aura.Providers.csproj --configuration Release --no-restore
        dotnet build Aura.Api/Aura.Api.csproj --configuration Release --no-restore
        
    - name: Run Unit Tests
      run: dotnet test Aura.Tests/Aura.Tests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=unit-tests.trx"
      
    - name: Build Portable Distribution
      run: |
        powershell -File scripts/packaging/build-portable.ps1
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-windows
        path: |
          **/TestResults/*.trx
          
    - name: Upload Portable Distribution
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: portable-distribution
        path: |
          artifacts/windows/portable/**/*.zip
          artifacts/windows/checksums.txt
        if-no-files-found: warn
  
  portable-only-guard:
    name: Portable-Only Policy Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run CI Guard
      run: |
        chmod +x scripts/cleanup/ci_guard.sh
        ./scripts/cleanup/ci_guard.sh
