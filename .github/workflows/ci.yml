name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: Aura.sln

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build Aura.Core
      run: dotnet build Aura.Core/Aura.Core.csproj --configuration Release --no-restore
      
    - name: Build Aura.Providers
      run: dotnet build Aura.Providers/Aura.Providers.csproj --configuration Release --no-restore
      
    - name: Build Aura.Tests
      run: dotnet build Aura.Tests/Aura.Tests.csproj --configuration Release --no-restore
      
    - name: Build Aura.E2E
      run: dotnet build Aura.E2E/Aura.E2E.csproj --configuration Release --no-restore
      
    - name: Run Unit Tests
      run: dotnet test Aura.Tests/Aura.Tests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=unit-tests.trx"
      
    - name: Run E2E Tests
      run: dotnet test Aura.E2E/Aura.E2E.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=e2e-tests.trx"
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/TestResults/*.trx
    
    - name: Upload E2E Smoke Test Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-smoke-artifacts
        path: |
          ${{ runner.temp }}/aura-e2e-artifacts/
        retention-days: 30
  
  portable-only-guard:
    name: Portable-Only Policy Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run CI Guard
      run: |
        chmod +x scripts/cleanup/ci_guard.sh
        ./scripts/cleanup/ci_guard.sh
  
  web-tests:
    name: Web Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: Aura.Web/package-lock.json
        
    - name: Install dependencies
      working-directory: Aura.Web
      run: npm ci
      
    - name: Run Type Check
      working-directory: Aura.Web
      run: npm run type-check
      
    - name: Run Vitest
      working-directory: Aura.Web
      run: npm test
      
    - name: Run Vitest with Coverage
      working-directory: Aura.Web
      run: npm run test:coverage
      
    - name: Build Production Bundle
      working-directory: Aura.Web
      run: npm run build:prod
      
    - name: Check Bundle Size
      working-directory: Aura.Web
      run: |
        echo "=== Production Bundle Sizes ==="
        du -sh dist/
        echo ""
        echo "=== Main Chunks (Largest 5) ==="
        find dist/assets -name "*.js" -not -name "*.map.js" -not -name "*.gz" -not -name "*.br" | xargs du -h | sort -h | tail -5
        echo ""
        echo "=== Compressed Sizes (Brotli) ==="
        find dist/assets -name "*.js.br" | xargs du -h | sort -h | tail -5
      
    - name: Verify Source Maps Hidden
      working-directory: Aura.Web
      run: |
        if grep -r "sourceMappingURL" dist/assets/*.js 2>/dev/null; then
          echo "ERROR: Source maps should be hidden in production!"
          exit 1
        else
          echo "âœ“ Source maps are properly hidden"
        fi
      
    - name: Upload Build Stats
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bundle-stats
        path: Aura.Web/dist/stats.html
        retention-days: 7
      
    - name: Install Playwright
      working-directory: Aura.Web
      run: npm run playwright:install
      
    - name: Run Playwright E2E Tests
      working-directory: Aura.Web
      run: npm run playwright
      
    - name: Upload Playwright Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: Aura.Web/playwright-report/
        retention-days: 30
        
    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: Aura.Web/coverage/
        retention-days: 30
