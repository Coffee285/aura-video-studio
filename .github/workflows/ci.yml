name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: Aura.sln

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build Aura.Core
      run: dotnet build Aura.Core/Aura.Core.csproj --configuration Release --no-restore
      
    - name: Build Aura.Providers
      run: dotnet build Aura.Providers/Aura.Providers.csproj --configuration Release --no-restore
      
    - name: Build Aura.Tests
      run: dotnet build Aura.Tests/Aura.Tests.csproj --configuration Release --no-restore
      
    - name: Build Aura.E2E
      run: dotnet build Aura.E2E/Aura.E2E.csproj --configuration Release --no-restore
      
    - name: Run Unit Tests
      run: dotnet test Aura.Tests/Aura.Tests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=unit-tests.trx"
      
    - name: Run E2E Tests
      run: dotnet test Aura.E2E/Aura.E2E.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=e2e-tests.trx"
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/TestResults/*.trx
          
  build-winui-app:
    name: Build WinUI 3 App
    runs-on: windows-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE }}
      
    - name: Build WinUI 3 App (x64)
      run: msbuild Aura.App/Aura.App.csproj /p:Configuration=Release /p:Platform=x64 /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /t:Build
      
    - name: Upload MSIX Package
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: msix-package
        path: |
          Aura.App/AppPackages/**/*.msix
          Aura.App/bin/x64/Release/**/*.msix
        if-no-files-found: warn
