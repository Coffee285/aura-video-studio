#!/bin/bash
# Manual Testing Script for First-Run Wizard State Machine

set -e

echo "================================"
echo "First-Run Wizard Manual Testing"
echo "================================"
echo ""

# Check if we're in the right directory
if [ ! -d "Aura.Web" ]; then
    echo "Error: Must run from repository root"
    exit 1
fi

cd Aura.Web

echo "Step 1: Installing dependencies..."
npm install

echo ""
echo "Step 2: Running unit tests..."
npm test

echo ""
echo "Step 3: Building project..."
npm run build

echo ""
echo "================================"
echo "Manual Testing Instructions"
echo "================================"
echo ""
echo "To test the First-Run Wizard manually:"
echo ""
echo "1. Start the dev server:"
echo "   npm run dev"
echo ""
echo "2. Open browser to http://localhost:5173"
echo ""
echo "3. Open browser console and clear localStorage:"
echo "   localStorage.removeItem('hasSeenOnboarding')"
echo ""
echo "4. Navigate to /onboarding"
echo ""
echo "5. Test scenarios:"
echo "   a) FREE-ONLY MODE (Happy Path)"
echo "      - Select Free-Only mode"
echo "      - Click Next through steps"
echo "      - Click Validate on last step"
echo "      - Button should show 'Validating...' with spinner"
echo "      - Should show 'All Set!' on success"
echo "      - Should show 'Create My First Video' button"
echo ""
echo "   b) PRO MODE (Error Path - requires backend running)"
echo "      - Select Pro Mode"
echo "      - Click Next through steps"
echo "      - Click Validate on last step"
echo "      - Should show validation errors"
echo "      - Should show 'Add API Key' fix actions"
echo "      - Should show suggestions and hints"
echo ""
echo "   c) NAVIGATION"
echo "      - Select any mode"
echo "      - Click Next"
echo "      - Click Back"
echo "      - Verify state is preserved"
echo "      - Change mode and continue"
echo ""
echo "   d) SKIP FLOW"
echo "      - Click 'Skip Setup' button"
echo "      - Should navigate to home page"
echo ""
echo "6. Verify button states:"
echo "   - 'Next' on non-validation steps"
echo "   - 'Validate' on validation step when idle"
echo "   - 'Validating...' with spinner during validation"
echo "   - 'Next' or 'Continue' after successful validation"
echo "   - 'Fix Issues' after failed validation"
echo "   - Buttons disabled during async operations"
echo ""
echo "7. E2E Tests (optional, requires backend):"
echo "   npm run playwright"
echo ""
echo "================================"
echo "Expected Behavior"
echo "================================"
echo ""
echo "State Machine Flow:"
echo "  Idle → Validating → Valid/Invalid"
echo "  Invalid → (fix issues) → Idle → Validating → Valid"
echo "  Valid → Ready → Complete"
echo ""
echo "Button Labels:"
echo "  Idle: 'Validate' (last step) or 'Next'"
echo "  Validating: 'Validating...' (with spinner)"
echo "  Valid: 'Next' or 'Continue'"
echo "  Invalid: 'Fix Issues' (can retry)"
echo "  Installing: 'Installing...' (with spinner)"
echo ""
echo "================================"
echo "Troubleshooting"
echo "================================"
echo ""
echo "If validation always fails:"
echo "  - Backend API may not be running"
echo "  - Check console for network errors"
echo "  - Free-Only mode should always pass"
echo ""
echo "If button stays stuck:"
echo "  - Check browser console for errors"
echo "  - Verify state machine transitions in React DevTools"
echo "  - Check correlationId in network tab"
echo ""
echo "If fix actions don't work:"
echo "  - Verify backend returns fixActions in response"
echo "  - Check handleFixAction in FirstRunWizard.tsx"
echo ""
echo "================================"
echo ""
echo "Setup complete! Run 'npm run dev' to start testing."
echo ""
