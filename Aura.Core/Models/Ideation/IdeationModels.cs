using System;
using System.Collections.Generic;

namespace Aura.Core.Models.Ideation;

/// <summary>
/// Represents a creative video concept idea generated by AI
/// </summary>
public record ConceptIdea(
    string ConceptId,
    string Title,
    string Description,
    string Angle,                    // Storytelling approach (narrative, tutorial, case study, etc.)
    string TargetAudience,
    List<string> Pros,
    List<string> Cons,
    double AppealScore,              // 0-100 score for audience appeal
    string Hook,                     // Opening hook suggestion
    Dictionary<string, double>? DemographicScores = null,  // Appeal scores by demographic
    DateTime? CreatedAt = null
);

/// <summary>
/// Represents the requirements gathered for a video brief
/// </summary>
public record BriefRequirements(
    string Topic,
    string? Goal,                    // Purpose of the video
    string? Audience,                // Target audience description
    string? Tone,                    // Desired tone (formal, casual, humorous, etc.)
    int? DurationSeconds,            // Desired video length
    string? Platform,                // Target platform (YouTube, TikTok, Instagram, etc.)
    string[]? Keywords,              // SEO keywords
    Dictionary<string, string>? AdditionalDetails = null  // Any other collected information
);

/// <summary>
/// Represents a trending topic identified by the system
/// </summary>
public record TrendingTopic(
    string TopicId,
    string Topic,
    double TrendScore,               // 0-100 score indicating trend strength
    string? SearchVolume,            // Estimated search volume (if available)
    string? Competition,             // Competition level (low, medium, high)
    string? Seasonality,             // Seasonal relevance
    string? Lifecycle,               // rising, peak, declining
    List<string>? RelatedTopics,     // Clustered related topics
    DateTime? DetectedAt = null,
    TrendingTopicInsights? AiInsights = null,  // AI-generated analysis
    List<string>? Hashtags = null,   // Suggested hashtags
    double? TrendVelocity = null,    // Rate of growth/decline
    long? EstimatedAudience = null   // Estimated potential audience size
);

/// <summary>
/// AI-generated insights about a trending topic
/// </summary>
public record TrendingTopicInsights(
    string WhyTrending,              // Explanation of why this topic is trending
    string AudienceEngagement,       // Insights about audience engagement patterns
    List<string> ContentAngles,      // Recommended content angles for creators
    string DemographicAppeal,        // Target demographic information
    double ViralityScore             // 0-100 score for potential virality
);

/// <summary>
/// Represents a research finding gathered by AI
/// </summary>
public record ResearchFinding(
    string FindingId,
    string Fact,
    string? Source,                  // Source URL or citation
    double CredibilityScore,         // 0-100 credibility rating
    double RelevanceScore,           // 0-100 relevance to topic
    string? Example,                 // Real-world example illustrating the fact
    DateTime? GatheredAt = null
);

/// <summary>
/// Represents a scene in a visual storyboard
/// </summary>
public record StoryboardScene(
    int SceneNumber,
    string Description,
    string VisualStyle,              // Visual style suggestion
    int DurationSeconds,
    string Purpose,                  // Purpose of this scene in the narrative
    List<string>? ShotList,          // Detailed shot descriptions
    string? TransitionType = null    // Transition to next scene
);

/// <summary>
/// Represents a clarifying question from AI
/// </summary>
public record ClarifyingQuestion(
    string QuestionId,
    string Question,
    string Context,                  // Why this question is being asked
    List<string>? SuggestedAnswers,  // Optional suggested answer options
    string QuestionType              // "open-ended", "multiple-choice", "yes-no"
);

/// <summary>
/// Request to brainstorm concept variations
/// </summary>
public record BrainstormRequest(
    string Topic,
    string? Audience = null,
    string? Tone = null,
    int? TargetDuration = null,
    string? Platform = null
);

/// <summary>
/// Response containing brainstormed concepts
/// </summary>
public record BrainstormResponse(
    List<ConceptIdea> Concepts,
    string OriginalTopic,
    DateTime GeneratedAt
);

/// <summary>
/// Request to expand/clarify the brief
/// </summary>
public record ExpandBriefRequest(
    string ProjectId,
    BriefRequirements CurrentBrief,
    string? UserMessage = null
);

/// <summary>
/// Response with expanded brief or questions
/// </summary>
public record ExpandBriefResponse(
    BriefRequirements? UpdatedBrief,
    List<ClarifyingQuestion>? Questions,
    string? AiResponse
);

/// <summary>
/// Request for trending topics analysis
/// </summary>
public record TrendingTopicsRequest(
    string? Niche = null,
    int? MaxResults = 10
);

/// <summary>
/// Response containing trending topics
/// </summary>
public record TrendingTopicsResponse(
    List<TrendingTopic> Topics,
    DateTime AnalyzedAt
);

/// <summary>
/// Request for content gap analysis
/// </summary>
public record GapAnalysisRequest(
    string? Niche = null,
    List<string>? ExistingTopics = null,
    List<string>? CompetitorTopics = null
);

/// <summary>
/// Response with content gap analysis
/// </summary>
public record GapAnalysisResponse(
    List<string> MissingTopics,
    List<TrendingTopic> Opportunities,
    List<string> OversaturatedTopics,
    Dictionary<string, List<string>>? UniqueAngles  // Popular topic -> unique angles
);

/// <summary>
/// Request for research gathering
/// </summary>
public record ResearchRequest(
    string Topic,
    int? MaxFindings = 10
);

/// <summary>
/// Response with research findings
/// </summary>
public record ResearchResponse(
    List<ResearchFinding> Findings,
    string Topic,
    DateTime GatheredAt
);

/// <summary>
/// Request for storyboard generation
/// </summary>
public record StoryboardRequest(
    ConceptIdea Concept,
    int TargetDurationSeconds
);

/// <summary>
/// Response with visual storyboard
/// </summary>
public record StoryboardResponse(
    List<StoryboardScene> Scenes,
    string ConceptTitle,
    int TotalDurationSeconds,
    DateTime GeneratedAt
);

/// <summary>
/// Request to refine a concept
/// </summary>
public record RefineConceptRequest(
    ConceptIdea Concept,
    string RefinementDirection,      // "expand", "simplify", "adjust-audience", "merge"
    ConceptIdea? SecondConcept = null,  // For merging
    string? TargetAudience = null    // For audience adjustment
);

/// <summary>
/// Response with refined concept
/// </summary>
public record RefineConceptResponse(
    ConceptIdea RefinedConcept,
    string ChangesSummary
);

/// <summary>
/// Request for clarifying questions
/// </summary>
public record QuestionsRequest(
    string ProjectId,
    BriefRequirements? CurrentBrief = null
);

/// <summary>
/// Response with clarifying questions
/// </summary>
public record QuestionsResponse(
    List<ClarifyingQuestion> Questions,
    string Context
);
